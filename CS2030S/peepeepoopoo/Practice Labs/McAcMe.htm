<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- saved from url=(0057)https://codecrunch.comp.nus.edu.sg/task_view.php?tid=4613 -->
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<meta http-equiv="pragma" content="no-cache">
<meta http-equiv="expires" content="-1">
<title>CodeCrunch</title>
<!-- START NUS Includes-->
<script type="text/javascript" src="./McAcMe_files/nussearch.js"></script>
<link rel="stylesheet" type="text/css" href="./McAcMe_files/nusbase.css" media="screen, print, projection, handheld">
<link rel="stylesheet" type="text/css" href="./McAcMe_files/nusmenu.css" media="screen, print, projection, handheld">
<link rel="stylesheet" type="text/css" href="./McAcMe_files/nusscreen.css" media="screen, projection, print">
<link href="https://codecrunch.comp.nus.edu.sg/nus/favicon.ico" rel="shortcut icon" type="image/vnd.microsoft.icon">
<link rel="apple-touch-icon" href="https://codecrunch.comp.nus.edu.sg/nus/blank.png">
<!-- END NUS Includes -->
<script type="text/javascript" src="./McAcMe_files/ajax.js"></script>
<script type="text/javascript" src="./McAcMe_files/jquery-1.8.3.min.js"></script>
<script type="text/javascript" src="./McAcMe_files/jquery.tablesorter.min.js"></script>
<script type="text/javascript" src="./McAcMe_files/jquery.tablesorter.pager.js"></script>
<!--<script type="text/javascript" src="/js/folding.js"></script>-->
<script type="text/javascript" src="./McAcMe_files/jquery.watermark.min.js"></script>
<script type="text/javascript">
            function enterPressButton(field, button) {
                $(field).keypress(function(e){if(e.which==13)$(button).trigger("click");});
            }
</script>
<link rel="stylesheet" href="./McAcMe_files/style.css" type="text/css">
<link rel="stylesheet" href="./McAcMe_files/jquery.tablesorter.css" type="text/css">
<script type="text/javascript" src="./McAcMe_files/jquery-1.3.2.min.js"></script>
<!--<script type="text/javascript" src="js/folding.js"></script>-->
<script type="text/javascript" src="./McAcMe_files/jquery.rating.js"></script>
<script type="text/javascript" src="./McAcMe_files/behaviour.js"></script>
<script type="text/javascript" src="./McAcMe_files/textarea_maxlen.js"></script>
<script type="text/javascript" src="./McAcMe_files/jquery.timer.js"></script>

<script type="text/javascript" src="./McAcMe_files/plupload.full.min.js"></script>

<link rel="stylesheet" href="./McAcMe_files/jquery.rating.css" type="text/css">
<link rel="stylesheet" href="./McAcMe_files/style.css" type="text/css">
<link rel="stylesheet" href="./McAcMe_files/tagcloud.css" type="text/css">
<link rel="stylesheet" href="./McAcMe_files/jquery-ui-1.7.2.custom.css" type="text/css">

<link rel="stylesheet" href="./McAcMe_files/jquery.ui.plupload.css" type="text/css">

</head>

<body data-gr-c-s-loaded="true">
<!-- START NUS-Header -->

<!-- NUS Header -->
<div id="nusheader" class="nusbody">
<div class="nuslogodiv">
<a href="http://www.nus.edu.sg/">
<img class="nuslogo" src="./McAcMe_files/soclogo.png" alt="">
</a>
</div>
<div id="nuspointermenu">
<ul>
<li><a href="http://exchange.nus.edu.sg/"><span style="text-transform:none">NUS WebMail</span></a></li>
<li><a href="https://ivle.nus.edu.sg/lms/default.aspx">ivle</a></li>
<li><a href="http://www.lib.nus.edu.sg/">library</a></li>
<li><a href="http://www.nus.edu.sg/campusmap/">maps</a></li>
<!--<li><a href="https://aces01.nus.edu.sg/CoE/jsp/coeMain.jsp">calendar</a></li>-->
<!--<li><a href="/sitemap">sitemap</a></li>-->
<!--<li><a href="#">a-z index</a></li>-->
<!--<li><a href="/contact">contact</a></li>-->
<li><a href="https://codecrunch.comp.nus.edu.sg/task_view.php?tid=4613#" id="rightcorner">&nbsp;</a></li>
</ul>
<br style="clear: left">
</div>
<div id="searchform">
<script src="./McAcMe_files/nussearch.js" type="text/javascript"></script>
<form id="frmSearch" onsubmit="evalSearch();return false" action="https://codecrunch.comp.nus.edu.sg/task_view.php?tid=4613"><div>
<a href="http://www.nus.edu.sg/search/" style="text-decoration:none; font-size:11px; font-weight:bold; color:#666666">Search </a>
<input id="txtKeyword" type="text" value="search for..." onfocus="value=&#39;&#39;" class="equal" size="18">
in
<select id="SearchMenu" name="SearchMenu">
<option selected="selected" value="0">NUS Websites</option>
<option value="1">Internet</option>
<option value="2">Staff Directory</option>
<option value="3">Advanced Search</option>
</select>
<input class="equal" id="Go" src="./McAcMe_files/go.png" type="image">
</div></form>
</div>
</div>

<!-- NUS Local-Navigation --><!--
<div id="nusmenu" class="nusbody"><div id="nusmenu_l"><div id="nusmenu_r">
<ul>
  <li><a href="http://www.comp.nus.edu.sg/index.html">Home</a></li>
  <li><a href="http://www.comp.nus.edu.sg/about.html">About Us</a></li>
  <li><a class="drop" href="javascript:;">Departments</a>
    <ul>
      <li><a href="http://www.comp.nus.edu.sg/cs" >Computer Science</a></li>
      <li><a href="http://www.comp.nus.edu.sg/is/" >Information Systems</a></li>
    </ul>
  </li>
  <li><a href="http://www.comp.nus.edu.sg/undergraduates" >Undergraduate</a></li>
  <li><a href="http://www.comp.nus.edu.sg/graduates" >Graduate</a></li>
  <li><a href="http://www.comp.nus.edu.sg/research" >Research</a></li>
  <li><a href="http://www.comp.nus.edu.sg/entrepreneurship" >Entrepreneurship</a></li>
  <li><a href="http://www.stmi.nus.edu.sg" >Executive Education</a></li>
  <li><a href="http://www.comp.nus.edu.sg/external_relations" >External Relations</a></li>
</ul>
</div></div></div>
-->

<!-- NUS Inner-Title -->
<div id="nustitle" class="nusbody"><div id="nustitle_l"><div id="nustitle_r">
              <h1 id="site-name">
                <a href="https://codecrunch.comp.nus.edu.sg/" title="Home" rel="home">CodeCrunch</a>
              </h1>
</div></div></div>

<!-- END NUS-Header -->

<div id="banner">
        <div id="topmenu">
        <div id="login">
                Logged in as: <strong>e0310357</strong>
                </div>
                <div style="display: block;"><ul>
                                        <li><a href="https://codecrunch.comp.nus.edu.sg/index.php">Home</a></li>
                                                    <li><a href="https://codecrunch.comp.nus.edu.sg/course_viewall.php">Courses</a></li>
                                                                <li><a href="https://codecrunch.comp.nus.edu.sg/tutorial_viewall.php">Tutorials</a></li>
                                                                <li><a href="https://codecrunch.comp.nus.edu.sg/task_viewall.php">Tasks</a></li>
                                                                <li><a href="https://codecrunch.comp.nus.edu.sg/tutorial_browser.php">Browse Tutorials</a></li>
                                                                <li><a href="https://codecrunch.comp.nus.edu.sg/user_viewsubmissions.php">My Submissions</a></li>
                                                                <li><a href="https://codecrunch.comp.nus.edu.sg/tools.php">Tools</a></li>
                                                <li><a href="https://codecrunch.comp.nus.edu.sg/logout_process.php">Logout</a></li>
                            </ul></div>
        </div>
</div>
<div id="container">
<div id="outer">
<div id="inner">
	<div id="content_full">                         
		<div class="content-header"><h3>CS2030 Lab #4 (Mock Practical Assessment)</h3></div>
		<div class="spacer"></div>
		<table width="100%" cellpadding="0" cellspacing="0" border="0">
			<tbody><tr><td valign="top" style="width: 30%;">
				<div class="meta_header">Tags &amp; Categories</div>
				<div id="classifyList"><span class="value">Tags:
</span>
<span class="value">Categories:
</span></div>
			</td>
			<td valign="top" style="width: 40%;">
				<div class="meta_header">Related Tutorials</div>
				<div id="tutorialList"></div>
			</td>
			<td valign="top" style="width: 30%;">
			</td>
			</tr>
		</tbody></table>
		<div class="content-header">
			<h3>Task Content
							</h3>
		</div>                          
		<div class="panel"><div class="task-content">
		<h3>CS2030 Lab #4 (Mock Practical Assessment)</h3>

<h4>Topic Coverage</h4>
<ul>
<li>Object-oriented design
</li><li>Java Collections
</li></ul>

<h4>Problem Description</h4>

<p>M<sup>c</sup>AcMe fast-food restaurant serves burgers, snacks and drinks.
An order comprises of a list of such food items on the menu.

</p><p>Your task in this assignment comprises of two parts:

</p><ol>
<li>Read food items into a menu;
</li><li>Take an order based on items on the menu, and work out the price.
</li></ol>

<p>A sample input for creating the menu is shown below. Each line begins with <tt>add</tt> followed by the type of food, a one-word description, and the price in cents.  <tt>end</tt> terminates the input.

</p><pre>add Burger Hamburger 399
add Snack Fries 189
add Drink SoftDrink 149
add Snack Drumlets 169
add Burger CheeseBurger 200
add Drink OrangeJuice 209
end
</pre>

<p>Processing the above creates a Menu as follows:

</p><pre>#0 Burger: Hamburger (399)
#4 Burger: CheeseBurger (200)
#1 Snack: Fries (189)
#3 Snack: Drumlets (169)
#2 Drink: SoftDrink (149)
#5 Drink: OrangeJuice (209)
</pre>

<p>Take note of the following:

</p><ul>
<li>Unique and running IDs (starting from <tt>0</tt>) are given to each food item as they are read;
</li><li>The menu above is printed with burger items first, followed by snacks, then drinks.
</li><li>There will be no duplicate entries and there is no need to perform input validation.
</li></ul>

<p>An order comprises a sequence of food IDs.  
The following shows the same input as above, except that the order is now included.

</p><pre>add Burger Hamburger 399
add Snack Fries 189
add Drink SoftDrink 149
add Snack Drumlets 169
add Burger CheeseBurger 200
add Drink OrangeJuice 209
end
2 1 4 3
</pre>

<p>The output generated is shown below:
</p><pre>#0 Burger: Hamburger (399)
#4 Burger: CheeseBurger (200)
#1 Snack: Fries (189)
#3 Snack: Drumlets (169)
#2 Drink: SoftDrink (149)
#5 Drink: OrangeJuice (209)
--- Order ---
#2 Drink: SoftDrink (149)
#1 Snack: Fries (189)
#4 Burger: CheeseBurger (200)
#3 Snack: Drumlets (169)
Total: 707
</pre>

<p>M<sup>c</sup>AcMe decides to also include Combo meals to its menu.  
Each Combo meal item comprises a number of items specified by their IDs.
You may assume that all specified item IDs are valid.
There is also a <tt>50</tt> cents discount off the entire order.
<!-- next iteration should pass discount as another argument -->
The following shows how a <tt>Combo</tt> menu item can be added:

</p><pre>add Combo HappyMeal 0 1 2
</pre>

<p>You may assume that all Combo menu items are valid.
<!--
<p>Any other combinations will invalidate the menu item and ignored.
-->
As an example, the following input

</p><pre>add Burger Hamburger 399
add Snack Fries 189
add Drink SoftDrink 149
add Combo HappyMeal 0 1 2
add Snack Drumlets 169
add Burger CheeseBurger 200
add Drink OrangeJuice 209
end
2 1 4 3 0
</pre>

<p>will generate the following output:

</p><pre>#0 Burger: Hamburger (399)
#5 Burger: CheeseBurger (200)
#1 Snack: Fries (189)
#4 Snack: Drumlets (169)
#2 Drink: SoftDrink (149)
#6 Drink: OrangeJuice (209)
#3 Combo: HappyMeal (687)
   #0 Burger: Hamburger (399)
   #1 Snack: Fries (189)
   #2 Drink: SoftDrink (149)
--- Order ---
#2 Drink: SoftDrink (149)
#1 Snack: Fries (189)
#4 Snack: Drumlets (169)
#3 Combo: HappyMeal (687)
   #0 Burger: Hamburger (399)
   #1 Snack: Fries (189)
   #2 Drink: SoftDrink (149)
#0 Burger: Hamburger (399)
Total: 1593
</pre>

<p>
The discounted price is output as part of the Combo menu item (e.g. <tt>687</tt> versus <tt>399 + 189 + 149</tt>).
<!--
In addition, invalid Combo meals are output as error messages;
specifically, the first error is due to the missing item <tt>#2</tt>, while the second error is due to the wrong combination of items making up a Combo meal.
-->

</p><p>Take note of the following assumptions:

</p><ul>
<li>There is at least one valid item in the menu
</li><li>There is at least one valid item in the order, there is no need to perform input validation on items in the order. 
</li><li>There is no need to work out whether individually ordered items make up a valid Combo meal
<!--
<li>You may assume that there are no more than 20 items on the menu, and the order does not exceed 50 items.
-->
</li></ul>

<p>This task is divided into several levels.
Read through all the levels 
to see how the different levels are related.
<!--
<b>Find a suitable level to start off.</b>
-->

</p><p>Just remember to:

</p><ul>
<li>always compile your program files first before using <tt>jshell</tt> to test your program, or running your program with <tt>java</tt>
<!--
<li>make use of provided <tt>Main</tt> class with the <tt>main</tt> method that handles input; you should extend this as you progress through the levels
<li>check for output format correctness using the <tt>diff</tt> utility (see specific level for usage details).  Note that only <b>one</b> test case is provided for this;
<li>save a copy of all source files into the appropriate level directory (see specific level for usage details); <b>only files from these directories are up-loaded to CodeCrunch</b>.
-->
</li><li><tt>checkstyle</tt> and <tt>javadoc</tt> comments can be included after your programs have been up-loaded to CodeCrunch; you have till Friday midnight to do so.
<!--
<ul>
<li>check for styling errors by invoking <tt>checkstyle</tt>. For example, to check styling for all java files
<pre>
$ checkstyle *.java
</pre>
</ul>
-->
</li></ul>

<!--
<b>
<ul>
<li>Deadline: Submit your work to CodeCrunch by Thursday, 15 September, 23:59:59.
</ul>
</b>
-->

<p>
</p><table border="1" cellpadding="10" width="800">

<tbody><tr><td><h4>Level 1</h4>

<p>Define the <tt>Menu</tt> class and create the menu of burger, snack and drink items by calling the <tt>add</tt> method.

</p><pre>$ javac your_java_files
$ jshell -q your_java_files_in_bottom-up_dependency_order &lt; test1.jsh
jshell&gt; Menu menu = new Menu();
jshell&gt; menu.add("Burger","Hamburger",399)
$.. ==&gt; #0 Burger: Hamburger (399)
jshell&gt; menu.add("Snack","Fries",189)
$.. ==&gt; #1 Snack: Fries (189)
jshell&gt; menu.add("Drink","SoftDrink",149)
$.. ==&gt; #2 Drink: SoftDrink (149)
jshell&gt; menu.add("Snack","Drumlets",169)
$.. ==&gt; #3 Snack: Drumlets (169)
jshell&gt; menu.add("Burger","CheeseBurger",200)
$.. ==&gt; #4 Burger: CheeseBurger (200)
jshell&gt; menu.add("Drink","OrangeJuice",209)
$.. ==&gt; #5 Drink: OrangeJuice (209)
jshell&gt; /exit
</pre>
</td></tr></tbody></table>

<!--
<p>Click <a href="https://codecrunch.comp.nus.edu.sg/task_view.php?tid=4187" target="_blank">here</a> 
to submit to CodeCrunch.

<p>Check the format correctness of the output by typing the following Unix command
<pre>
$ java Main &lt; test1.in | diff - test1.out
</pre>

<p>Make a copy of your Java programs to the level directory by typing the Unix commands

<pre>
$ mkdir food1
$ cp *.java food1
</pre>
-->



<table border="1" cellpadding="10" width="800">

<tbody><tr><td><h4>Level 2</h4>

<p>Now output the menu grouped by the type of food.  
The ordering is in terms of the order of presentation of input.

</p><p>As an example, in the sample test below, a burger is added first, followed by a snack, then a drink.  So burgers are listed, then snacks, then drink.  Within burgers, HamBurger is added before CheeseBurger.

</p><p>In addition, M<sup>c</sup>AcMe expects to include additional types of food with each food having a fixed price.
You will need to keep this in mind for ease of future extensions.

</p><pre>$ javac your_java_files
$ jshell -q your_java_files_in_bottom-up_dependency_order &lt; test2.jsh
jshell&gt; Menu menu = new Menu()
jshell&gt; menu.add("Burger","Hamburger",399)
$.. ==&gt; #0 Burger: Hamburger (399)
jshell&gt; menu.add("Snack","Fries",189)
$.. ==&gt; #1 Snack: Fries (189)
jshell&gt; menu.add("Drink","SoftDrink",149)
$.. ==&gt; #2 Drink: SoftDrink (149)
jshell&gt; menu.add("Snack","Drumlets",169)
$.. ==&gt; #3 Snack: Drumlets (169)
jshell&gt; menu.add("Burger","CheeseBurger",200)
$.. ==&gt; #4 Burger: CheeseBurger (200)
jshell&gt; menu.add("Drink","OrangeJuice",209)
$.. ==&gt; #5 Drink: OrangeJuice (209)
jshell&gt; menu.print()
#0 Burger: Hamburger (399)
#4 Burger: CheeseBurger (200)
#1 Snack: Fries (189)
#3 Snack: Drumlets (169)
#2 Drink: SoftDrink (149)
#5 Drink: OrangeJuice (209)
jshell&gt; /exit
</pre>

<!--
<p>Click <a href="https://codecrunch.comp.nus.edu.sg/task_view.php?tid=4188" target="_blank">here</a> 
to submit to CodeCrunch.
-->

<p><i>Hint:</i> Find the simplest way to get this done.  <i>You may not want to sort.</i>

<!--
<p>Check the format correctness of the output by typing the following Unix command
<pre>
$ java Main &lt; test2.in | diff - test2.out
</pre>

<p>Make a copy of your Java programs to the level directory by typing the Unix commands

<pre>
$ mkdir food2
$ cp *.java food2
</pre>
-->

</p></td></tr></tbody></table>

<table border="1" cellpadding="10" width="800">

<tbody><tr><td><h4>Level 3</h4>

<p>After reading the menu, we can proceed to process and output an order.  
Each order comprises an array of integer values representing the menu items. 
There is no need to perform any validation check.


<!--
The following program fragment shows you how the input can be read.

<pre>
        Scanner sc = new Scanner(System.in);

        while(sc.next().equals("add")) {
            String type = sc.next();
            String desc = sc.next();
            int price = sc.nextInt();
            System.out.println(type + " " + desc + " " + price);
        }

        // read order
        while (sc.hasNext()) {
           System.out.println(sc.nextInt());
        }
</pre>
-->

<!--
<p>Take note of the following:

<ul>
<li>There is no need to perform any validation check.
<li>Implement ordering properly to avoid further modification in subsequent levels.
<li>If you are testing the program interactively, use <tt>^D</tt> (Control-d) to terminate the input (see sample run)
</ul>

<p>The following is a sample run of the program.  User input is <u>underlined</u>.  
-->
<!-- Ensure that the last line of output is followed by a newline character. -->

</p><pre>$ javac your_java_files
$ jshell -q your_java_files_in_bottom-up_dependency_order &lt; test3.jsh
jshell&gt; Menu menu = new Menu();
jshell&gt; menu.add("Burger","Hamburger",399)
$.. ==&gt; #0 Burger: Hamburger (399)
jshell&gt; menu.add("Snack","Fries",189)
$.. ==&gt; #1 Snack: Fries (189)
jshell&gt; menu.add("Drink","SoftDrink",149)
$.. ==&gt; #2 Drink: SoftDrink (149)
jshell&gt; menu.add("Snack","Drumlets",169)
$.. ==&gt; #3 Snack: Drumlets (169)
jshell&gt; menu.add("Burger","CheeseBurger",200)
$.. ==&gt; #4 Burger: CheeseBurger (200)
jshell&gt; menu.add("Drink","OrangeJuice",209)
$.. ==&gt; #5 Drink: OrangeJuice (209)
jshell&gt; menu.print()
#0 Burger: Hamburger (399)
#4 Burger: CheeseBurger (200)
#1 Snack: Fries (189)
#3 Snack: Drumlets (169)
#2 Drink: SoftDrink (149)
#5 Drink: OrangeJuice (209)
jshell&gt; new Order(menu).add(new int[]{2, 1, 4, 3})
$.. ==&gt; 
#2 Drink: SoftDrink (149)
#1 Snack: Fries (189)
#4 Burger: CheeseBurger (200)
#3 Snack: Drumlets (169)
Total: 707
jshell&gt; /exit
</pre>

<!--
<p><table border=1 >

<tr><td><tt>
<u>add Burger Hamburger 399</u><br>
<u>add Snack Fries 189</u><br>
<u>add Drink SoftDrink 149</u><br>
<u>add Snack Drumlets 169</u><br>
<u>add Burger CheeseBurger 200</u><br>
<u>add Drink OrangeJuice 209</u><br>
<u>end</u><br> 
#0 Burger: Hamburger (399)<br>
#4 Burger: CheeseBurger (200)<br>
#1 Snack: Fries (189)<br>
#3 Snack: Drumlets (169)<br>
#2 Drink: SoftDrink (149)<br>
#5 Drink: OrangeJuice (209)<br>
<u>2 1 4 3</u><br>
<u>^D</u><br>
--- Order ---<br>
#2 Drink: SoftDrink (149)<br>
#1 Snack: Fries (189)<br>
#4 Burger: CheeseBurger (200)<br>
#3 Snack: Drumlets (169)<br>
Total: 707<br>
</tt>

</table>

<p>Click <a href="https://codecrunch.comp.nus.edu.sg/task_view.php?tid=4189" target="_blank">here</a> 
to submit to CodeCrunch.

<p>Check the format correctness of the output by typing the following Unix command
<pre>
$ java Main &lt; test3.in | diff - test3.out
</pre>

<p>Make a copy of your Java programs to the level directory by typing the Unix commands

<pre>
$ mkdir food3
$ cp *.java food3
</pre>
-->

</td></tr></tbody></table>

<table border="1" cellpadding="10" width="800">

<tbody><tr><td><h4>Level 4</h4>

<p>Now extend the implementation by including the Combo meal.  
A Combo meal can comprise of any number of food items, even duplicates.
There is no need to perform any input validation in terms of duplicate Combos, Combos comprising invalid indices, or Combos comprising other Combos.

</p><p>You can also be assurred that the Combo is the only complex menu item that M<sup>c</sup>AcMe needs to handle.

</p><p>Finally, Combo items are always printed at the end of the menu.

<!--
<p>The following is a sample run of the program.  User input is <u>underlined</u>.  
 Ensure that the last line of output is followed by a newline character. -->

</p><pre>$ javac your_java_files
$ jshell -q your_java_files_in_bottom-up_dependency_order &lt; test4.jsh
jshell&gt; Menu menu = new Menu();
jshell&gt; menu.add("Burger","Hamburger",399)
$.. ==&gt; #0 Burger: Hamburger (399)
jshell&gt; menu.add("Snack","Fries",189)
$.. ==&gt; #1 Snack: Fries (189)
jshell&gt; menu.add("Drink","SoftDrink",149)
$.. ==&gt; #2 Drink: SoftDrink (149)
jshell&gt; menu.add("Combo","HappyMeal", Arrays.asList(0, 1, 2))
$.. ==&gt; #3 Combo: HappyMeal (687)
   #0 Burger: Hamburger (399)
   #1 Snack: Fries (189)
   #2 Drink: SoftDrink (149)
jshell&gt; menu.add("Snack","Drumlets",169)
$.. ==&gt; #4 Snack: Drumlets (169)
jshell&gt; menu.add("Burger","CheeseBurger",200)
$.. ==&gt; #5 Burger: CheeseBurger (200)
jshell&gt; menu.add("Drink","OrangeJuice",209)
$.. ==&gt; #6 Drink: OrangeJuice (209)
jshell&gt; menu.print()
#0 Burger: Hamburger (399)
#5 Burger: CheeseBurger (200)
#1 Snack: Fries (189)
#4 Snack: Drumlets (169)
#2 Drink: SoftDrink (149)
#6 Drink: OrangeJuice (209)
#3 Combo: HappyMeal (687)
   #0 Burger: Hamburger (399)
   #1 Snack: Fries (189)
   #2 Drink: SoftDrink (149)
jshell&gt; new Order(menu).add(new int[]{2, 1, 4, 3})
$.. ==&gt; 
#2 Drink: SoftDrink (149)
#1 Snack: Fries (189)
#4 Snack: Drumlets (169)
#3 Combo: HappyMeal (687)
   #0 Burger: Hamburger (399)
   #1 Snack: Fries (189)
   #2 Drink: SoftDrink (149)
Total: 1194
jshell&gt; /exit
</pre>

<!--
<p><table border=1 >

<tr><td><tt>
<u>add Burger Hamburger 399</u><br>
<u>add Snack Fries 189</u><br>
<u>add Drink SoftDrink 149</u><br>
<u>add Combo 0 1 2</u><br>
<u>add Snack Drumlets 169</u><br>
<u>add Burger CheeseBurger 200</u><br>
<u>add Drink OrangeJuice 209</u><br>
<u>end</u><br>
#0 Burger: Hamburger (399)<br>
#5 Burger: CheeseBurger (200)<br>
#1 Snack: Fries (189)<br>
#4 Snack: Drumlets (169)<br>
#2 Drink: SoftDrink (149)<br>
#6 Drink: OrangeJuice (209)<br>
<u>2 1 4 3 0</u><br>
<u>^D</u><br>
--- Order ---<br>
#2 Drink: SoftDrink (149)<br>
#1 Snack: Fries (189)<br>
#4 Snack: Drumlets (169)<br>
#3 Combo (687)<br>
&nbsp;&nbsp;&nbsp;#0&nbsp;Burger:&nbsp;Hamburger&nbsp;(399)<br>
&nbsp;&nbsp;&nbsp;#1&nbsp;Snack:&nbsp;Fries&nbsp;(189)<br>
&nbsp;&nbsp;&nbsp;#2&nbsp;Drink:&nbsp;SoftDrink&nbsp;(149)<br>
#0 Burger: Hamburger (399)<br>
Total: 1593<br>
</tt>

</table>

<p>Click <a href="https://codecrunch.comp.nus.edu.sg/task_view.php?tid=4190" target="_blank">here</a> 
to submit to CodeCrunch.

<p>Check the format correctness of the output by typing the following Unix command
<pre>
$ java Main &lt; test4.in | diff - test4.out
</pre>

<p>Make a copy of your Java programs to the level directory by typing the Unix commands

<pre>
$ mkdir food4
$ cp *.java food4
</pre>
-->

</td></tr></tbody></table>

<table border="1" cellpadding="10" width="800">

<tbody><tr><td><h4>Level 5</h4>

<p>Now complete the program by including the input and output.
The <tt>Main</tt> class has been provided to you.

</p><pre>import java.util.Scanner;

class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while(sc.next().equals("add")) {
           // read menu items here
        }

        while (sc.hasNext()) {
           // read order here
        }
    }
}
</pre>

<p>Modify the <tt>Main</tt> class to read the food items and print out the menu in order of presentation.

</p><p>The following is a sample run of the program.  User input is <u>underlined</u>.  
<!-- Ensure that the last line of output is followed by a newline character. -->

</p><p></p><table border="1">

<tbody><tr><td><tt>
<u>add Burger Hamburger 399</u><br>
<u>add Snack Fries 189</u><br>
<u>add Drink SoftDrink 149</u><br>
<u>add Combo HappyMeal 0 1 2</u><br>
<u>add Snack Drumlets 169</u><br>
<u>add Burger CheeseBurger 200</u><br>
<u>add Drink OrangeJuice 209</u><br>
<u>end</u><br>
#0 Burger: Hamburger (399)<br>
#5 Burger: CheeseBurger (200)<br>
#1 Snack: Fries (189)<br>
#4 Snack: Drumlets (169)<br>
#2 Drink: SoftDrink (149)<br>
#6 Drink: OrangeJuice (209)<br>
#3 Combo: HappyMeal (687)<br>
&nbsp;&nbsp;&nbsp;#0&nbsp;Burger:&nbsp;Hamburger&nbsp;(399)<br>
&nbsp;&nbsp;&nbsp;#1&nbsp;Snack:&nbsp;Fries&nbsp;(189)<br>
&nbsp;&nbsp;&nbsp;#2&nbsp;Drink:&nbsp;SoftDrink&nbsp;(149)<br>
<u>2 1 4 3 0</u><br>
<u>^D</u><br>
<br>
--- Order ---<br>
<br>
#2 Drink: SoftDrink (149)<br>
#1 Snack: Fries (189)<br>
#4 Snack: Drumlets (169)<br>
#3 Combo: HappyMeal (687)<br>
&nbsp;&nbsp;&nbsp;#0&nbsp;Burger:&nbsp;Hamburger&nbsp;(399)<br>
&nbsp;&nbsp;&nbsp;#1&nbsp;Snack:&nbsp;Fries&nbsp;(189)<br>
&nbsp;&nbsp;&nbsp;#2&nbsp;Drink:&nbsp;SoftDrink&nbsp;(149)<br>
#0 Burger: Hamburger (399)<br>
Total: 1593<br>
</tt>

</td></tr></tbody></table>

<!--
<p>Click <a href="https://codecrunch.comp.nus.edu.sg/task_view.php?tid=4191" target="_blank">here</a> 
to submit to CodeCrunch.
-->

<p>Check the format correctness of the output by typing the following Unix command
</p><pre>$ java Main &lt; test5.in | diff - test5.out
</pre>

<!--
<p>Make a copy of your Java programs to the level directory by typing the Unix commands

<pre>
$ mkdir food5
$ cp *.java food5
</pre>
-->
</td></tr></tbody></table>

<!--
<table border=1 cellpadding=10 width=800>

<tr><td><h4>Level 6 (Surprise!)</h4>

<p>The purpose of this level is to determine an aspect of abstraction in your program.
You might have noticed that when the menu is output, the Combo meals are missing.
By making minimal modifications to your program in the previous level, output the Combo meals at the end of the menu.

<p>The following is a sample run of the program.  User input is <u>underlined</u>.  
 Ensure that the last line of output is followed by a newline character. 

<p><table border=1 >

<tr><td><tt>
<u>add Burger Hamburger 399</u><br>
<u>add Snack Fries 189</u><br>
<u>add Combo 0 1 2</u><br>
Error: Invalid Combo input 0 1 2<br>
<u>add Drink SoftDrink 149</u><br>
<u>add Combo 0 2 1</u><br>
Error: Invalid Combo input 0 2 1<br>
<u>add Combo 0 1 2</u><br>
<u>add Snack Drumlets 169</u><br>
<u>add Burger CheeseBurger 200</u><br>
<u>add Drink OrangeJuice 209</u><br>
<u>end</u><br>
#0 Burger: Hamburger (399)<br>
#5 Burger: CheeseBurger (200)<br>
#1 Snack: Fries (189)<br>
#4 Snack: Drumlets (169)<br>
#2 Drink: SoftDrink (149)<br>
#6 Drink: OrangeJuice (209)<br>
#3 Combo (687)<br>
&nbsp;&nbsp;&nbsp;#0&nbsp;Burger:&nbsp;Hamburger&nbsp;(399)<br>
&nbsp;&nbsp;&nbsp;#1&nbsp;Snack:&nbsp;Fries&nbsp;(189)<br>
&nbsp;&nbsp;&nbsp;#2&nbsp;Drink:&nbsp;SoftDrink&nbsp;(149)<br>
<u>2 1 4 3 0</u><br>
<u>^D</u><br>
--- Order ---<br>
#2 Drink: SoftDrink (149)<br>
#1 Snack: Fries (189)<br>
#4 Snack: Drumlets (169)<br>
#3 Combo (687)<br>
&nbsp;&nbsp;&nbsp;#0&nbsp;Burger:&nbsp;Hamburger&nbsp;(399)<br>
&nbsp;&nbsp;&nbsp;#1&nbsp;Snack:&nbsp;Fries&nbsp;(189)<br>
&nbsp;&nbsp;&nbsp;#2&nbsp;Drink:&nbsp;SoftDrink&nbsp;(149)<br>
#0 Burger: Hamburger (399)<br>
Total: 1593<br>
</tt>

</table>

<p>Click <a href="https://codecrunch.comp.nus.edu.sg/task_view.php?tid=4192" target="_blank">here</a> 
to submit to CodeCrunch.

<p>Check the format correctness of the output by typing the following Unix command
<pre>
$ java Main &lt; test5.in 2&gt;&amp;1 | diff - test5.out
</pre>

<p>Make a copy of your Java programs to the level directory by typing the Unix commands

<pre>
$ mkdir food5
$ cp *.java food5
</pre>

</table>
-->
		</div></div>                          
					<div class="content-header">
					<h3>Submission (Practice)</h3>
			</div>
			<div id="practiceNotification"></div>
			<div class="panel">
				<span class="label" style="vertical-align:top">Your Files:</span>
				<span class="value-long">
					<div id="plupload_container" style="position: relative;">
						<a id="task_submission" href="javascript:;" class="submitButton" style="position: relative; z-index: 1;">BROWSE</a>
					<div id="html5_1e5cf8e7mokg1lajba117b71q224_container" class="moxie-shim moxie-shim-html5" style="position: absolute; top: -7px; left: 0px; width: 103px; height: 28px; overflow: hidden; z-index: 0;"><input id="html5_1e5cf8e7mokg1lajba117b71q224" type="file" style="font-size: 999px; opacity: 0; position: absolute; top: 0px; left: 0px; width: 100%; height: 100%;" multiple="" accept=".java,.c,.cpp,.h,.py,.jar" tabindex="-1"></div></div>
					<br>
					<div id="filelist"></div>
					<script type="text/javascript">
						var uploader;
						$(document).ready(function() {		
							uploader = new plupload.Uploader({
								runtimes: 'html5,flash,html4',
								browse_button: 'task_submission',
								container: 'plupload_container',
								prevent_duplicates: true,
								url: 'plupload/uploadFiles.php',

								filters: {
									max_file_size: '31457280', 
									mime_types: [
										{title : "Allowed files", extensions : "java,c,cpp,h,py,jar"}	
									]
								},

								init: {
									PostInit: function () {
										document.getElementById('filelist').innerHTML = '';
									},

									FilesAdded: function (up, files) {
										plupload.each(files, function(file) {
											document.getElementById('filelist').innerHTML += 
												'<li class="plupload_file ui-state-default plupload_delete" id="' + file.id + '" class="plupload_file_name">' +  
													'<div class="plupload_file_status">' +
														'<div class="plupload_file_action">' + 
															'<div class="plupload_action_icon ui-icon ui-icon-circle-close" onclick="uploader.removeFile(uploader.getFile(\''+file.id+'\'));"> </div>' + 
														'</div>' +
														'<div class="plupload_file_name" title="' + file.name + '">' + 
															'<span class="plupload_file_name_wrapper">' + file.name + '   (<i>' + plupload.formatSize(file.size) + '</i>) <b></b>' + '</span>' +
														'</div>' +
													'</div>' +
												'</li>';
										});
										document.getElementById('filelist').innerHTML = '<ul class="plupload_filelist_content" id="uploader_filelist" unselectable="on">' + document.getElementById('filelist').innerHTML + '</ul>';

									},

									FilesRemoved: function(up, files) {
										plupload.each(files, function(file) {
											$('#' + file.id).remove();
										});
									},

									FileUploaded: function(up, file, info) {
										$('#' + file.id).remove();
									},

									UploadProgress: function(up, file) {
										$('#' + file.id + ' b')[0].innerHTML = '<span>' + file.percent + "%</span>";
									},

									UploadComplete: function(up, files) {
										doTaskGrade();
									},

									Error: function(up, err) {
										alert("\nError #" + err.code + ": " + err.message);
									}
								}
							});
							uploader.init();


						});

					</script><br>
					<p><a href="javascript:uploader.setOption(&#39;multipart_params&#39;, { &#39;sess_id&#39;: &#39;mb00urn4ahqfj2erlg9plkqhp872sjig&#39;, &#39;type&#39;: &#39;task_submission&#39;, &#39;tid&#39;: &#39;4613&#39;, &#39;username&#39;: &#39;e0310357&#39;, &#39;uid&#39;: &#39;17287&#39; }); javascript:uploader.start();" class="submitButton">SUBMIT</a>
					(only .java, .c,  .cpp, .h, and .py extensions allowed)</p>
				</span>
				<br>
				<span class="label">&nbsp;</span>
				<span class="value-long" style="font-size: 90%; color: #777;">To submit multiple files, click on the Browse button, then select one or more
				files. The selected file(s) will be added to the upload queue. You can repeat this step to add more files. Check that you have all the files
				needed for your submission. Then click on the Submit button to upload your submission.</span>
			</div>
        							<input type="hidden" id="tid" name="tid" value="4613">
		</div>
		<!-- end content -->
</div>
<!-- end inner -->
<div id="loading-mask">
        <p id="loading_mask_loader" class="loader" style="display: none;"> <img alt="Loading..." src="./McAcMe_files/ajax-loader-tr.gif"> <br>
                Please wait... </p>
</div>
<script type="text/javascript">
$(".star").rating({
        focus: function(value, link) {
                var tip = $("#rating_text");
                tip[0].data = tip[0].data || tip.html(); 
                tip.html(link.title || "value: " + value);
        },
        blur: function(value, link) {
                var tip = $("#rating_text");
                $("#rating_text").html(tip[0].data || "");
        },
        callback: function(value, link) {
                $.ajax({
                        type: "POST",
                        url: "task_updaterating.php",
                        data: ({tid:$("#tid").val(), rating:value}),
                        success: function(html) {
                                var msg = html.split(";");
                                $("#rating_text").removeClass().addClass(msg[0]);
                                $("#rating_text").html(msg[1]);
                        }
                });
        }
});

function getComments() {
        $.ajax({
                type: "POST",
                url: "task_getcomments.php",
                data: ({tid:$("#tid").val()}),
                success: function(html) {
                        $("#commentList").html(html);
                }
        });
}

function doTaskGrade(e, d) {
        $.ajax({
                type: "POST",
                url: "doTaskGrade.php",
                data: ({tid:$("#tid").val()}),
                success: function(html) {
                        var msg = html.split(";");
                        $("#practiceNotification").removeClass().addClass(msg[0]);
                        $("#practiceNotification").html(msg[1]);
                }
        });

}

function doCourseTaskGrade(e, d) {
        $.ajax({
                type: "POST",
                url: "doTaskGrade.php",
                data: ({tid:$("#tid").val(), course_id:$("#course_id").val(), do_course:1}),
                success: function(html) {
                        var msg = html.split(";");
                        $("#courseNotification").removeClass().addClass(msg[0]);
                        $("#courseNotification").html(msg[1]);
                }
        });

}

function addComment() {
        $.ajax({
                type: "POST",
                url: "task_addcomment.php",
                data: ({tid:$("#tid").val(), comment:encodeURIComponent($("#comment").val())}),
                success: function(html) {
                        var msg = html.split(";");
                        $("#commentNotification").removeClass().addClass(msg[0]);
                        $("#commentNotification").html(msg[1]);
                        
                        getComments();
                }
        });
}

function deleteComment(c) {
        $.ajax({
                type: "POST",
                url: "task_deletecomment.php",
                data: ({comment_id:c}),
                success: function(html) {
                        var msg = html.split(";");
                        $("#commentNotification").removeClass().addClass(msg[0]);
                        $("#commentNotification").html(msg[1]);
                        
                        getComments();
                }
        });
}

function getClassify(){
                $.ajax({
                type: "GET",
                url: "task_classify.php",
                data: ({tid:$("#tid").val()}),
                success: function(html) {
                        $("#classifyList").html(html);
                }
        });
}

function getTutorial(){
        $.ajax({
                type: "POST",
                url: "task_gettutorials.php",
                data: ({tid:$("#tid").val()}),
                success: function(html) {
                        $("#tutorialList").html(html);
                }
        });
}

function getQueries() {
        $.ajax({
                type: "POST",
                url: "task_getqueries.php",
                data: ({tid:$("#tid").val()}),
                success: function(html) {
                        $("#queryList").html(html);
                }
        });
}

function addQuery() {
        $.ajax({
                type: "POST",
                url: "task_addquery.php",
                data: ({tid:$("#tid").val(), contest_id:$("#contest_id").val(), query:encodeURIComponent($("#query").val())}),
                success: function(html) {
                        var msg = html.split(";");
                        $("#queryNotification").removeClass().addClass(msg[0]);
                        $("#queryNotification").html(msg[1]);
                        
                        getQueries();
                }
        });
}

function deleteQuery(q) {
        $.ajax({
                type: "POST",
                url: "task_deletequery.php",
                data: ({query_id:q}),
                success: function(html) {
                        var msg = html.split(";");
                        $("#queryNotification").removeClass().addClass(msg[0]);
                        $("#queryNotification").html(msg[1]);
                        
                        getQueries();
                }
        });
}

function addTag() {
        $.ajax({
                type: "POST",
                url: "tag_add.php",
                data: ({tid:$("#tid").val(), tags:$("#tagwords").val()}),
                success: function(html) {
                        var msg = html.split(";");
                        $("#tagNotification").removeClass().addClass(msg[0]);
                        $("#tagNotification").html(msg[1]);
                        
                        getClassify();
                }
        });
}


$(document).ready(function() {
        getComments();
        getQueries();
        getClassify();
        getTutorial();
        //getCloud();
});

$(document).everyTime(60000, function(i) {
        if ($("#tid").val() != "" && $("#tid").val() != null) {
                $.ajax({
                        type: "POST",
                        url: "task_checkcontest.php",
                        data: ({tid:$("#tid").val()}),
                        success: function(html) {
                                if (html == "0") {
                                        $("#contest_submit").html("");
                                }
                        }
                });
                $.ajax({
                        type: "POST",
                        url: "task_checkcourse.php",
                        data: ({tid:$("#tid").val()}),
                        success: function(html) {
                                if (html == "0") {
                                        $("#course_submit").html("");
                                }
                        }
                });
        }
}, 0);

$('#loading_mask_loader')
        .hide()  // hide it initially
        .ajaxStart(function() {
                $(this).show();
        })
        .ajaxStop(function() {
                $(this).hide();
        });
        
</script>


</div> <!-- end outer -->

</div> <!-- end container -->

<!-- START NUS-Footer --> 
<div id="nusfooter" class="nusbody">
<div id="nusfooter_ml"><div id="nusfooter_mr">
<div id="nusfooter_tc"><div id="nusfooter_tl"><div id="nusfooter_tr">
<div id="nusfooter_bc"><div id="nusfooter_bl"><div id="nusfooter_br">
<div class="inner"><div class="left"><p>© Copyright 2009-2020 National University of Singapore. All Rights Reserved.</p>  
<p class="nusfooterlinks">
<a href="http://www.nus.edu.sg/terms.php">Terms of Use</a> |
<a href="http://www.nus.edu.sg/policy.php">Privacy</a> |
<a href="http://www.nus.edu.sg/nondiscrim.php">Non-discrimination</a></p> 
</div>    
<div class="right">
<a href="https://mysoc.nus.edu.sg/">MySoC</a> |
<a href="https://docs.comp.nus.edu.sg/cf/">Computing Facilities</a> |
<a href="http://www.nus.edu.sg/search/">Search</a> |
<a href="http://www.nus.edu.sg/campusmap/">Campus Map</a>
<p>School of Computing, National University of Singapore</p>
</div>    
<div style="clear: both;"> </div>
</div>
</div></div></div>
</div></div></div>
</div></div>
</div>
<!-- END NUS-Footer -->

</body></html>