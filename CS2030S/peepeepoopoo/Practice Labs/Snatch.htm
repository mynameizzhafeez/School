<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- saved from url=(0057)https://codecrunch.comp.nus.edu.sg/task_view.php?tid=4651 -->
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<meta http-equiv="pragma" content="no-cache">
<meta http-equiv="expires" content="-1">
<title>CodeCrunch</title>
<!-- START NUS Includes-->
<script type="text/javascript" src="./Snatch_files/nussearch.js"></script>
<link rel="stylesheet" type="text/css" href="./Snatch_files/nusbase.css" media="screen, print, projection, handheld">
<link rel="stylesheet" type="text/css" href="./Snatch_files/nusmenu.css" media="screen, print, projection, handheld">
<link rel="stylesheet" type="text/css" href="./Snatch_files/nusscreen.css" media="screen, projection, print">
<link href="https://codecrunch.comp.nus.edu.sg/nus/favicon.ico" rel="shortcut icon" type="image/vnd.microsoft.icon">
<link rel="apple-touch-icon" href="https://codecrunch.comp.nus.edu.sg/nus/blank.png">
<!-- END NUS Includes -->
<script type="text/javascript" src="./Snatch_files/ajax.js"></script>
<script type="text/javascript" src="./Snatch_files/jquery-1.8.3.min.js"></script>
<script type="text/javascript" src="./Snatch_files/jquery.tablesorter.min.js"></script>
<script type="text/javascript" src="./Snatch_files/jquery.tablesorter.pager.js"></script>
<!--<script type="text/javascript" src="/js/folding.js"></script>-->
<script type="text/javascript" src="./Snatch_files/jquery.watermark.min.js"></script>
<script type="text/javascript">
            function enterPressButton(field, button) {
                $(field).keypress(function(e){if(e.which==13)$(button).trigger("click");});
            }
</script>
<link rel="stylesheet" href="./Snatch_files/style.css" type="text/css">
<link rel="stylesheet" href="./Snatch_files/jquery.tablesorter.css" type="text/css">
<script type="text/javascript" src="./Snatch_files/jquery-1.3.2.min.js"></script>
<!--<script type="text/javascript" src="js/folding.js"></script>-->
<script type="text/javascript" src="./Snatch_files/jquery.rating.js"></script>
<script type="text/javascript" src="./Snatch_files/behaviour.js"></script>
<script type="text/javascript" src="./Snatch_files/textarea_maxlen.js"></script>
<script type="text/javascript" src="./Snatch_files/jquery.timer.js"></script>

<script type="text/javascript" src="./Snatch_files/plupload.full.min.js"></script>

<link rel="stylesheet" href="./Snatch_files/jquery.rating.css" type="text/css">
<link rel="stylesheet" href="./Snatch_files/style.css" type="text/css">
<link rel="stylesheet" href="./Snatch_files/tagcloud.css" type="text/css">
<link rel="stylesheet" href="./Snatch_files/jquery-ui-1.7.2.custom.css" type="text/css">

<link rel="stylesheet" href="./Snatch_files/jquery.ui.plupload.css" type="text/css">

</head>

<body data-gr-c-s-loaded="true">
<!-- START NUS-Header -->

<!-- NUS Header -->
<div id="nusheader" class="nusbody">
<div class="nuslogodiv">
<a href="http://www.nus.edu.sg/">
<img class="nuslogo" src="./Snatch_files/soclogo.png" alt="">
</a>
</div>
<div id="nuspointermenu">
<ul>
<li><a href="http://exchange.nus.edu.sg/"><span style="text-transform:none">NUS WebMail</span></a></li>
<li><a href="https://ivle.nus.edu.sg/lms/default.aspx">ivle</a></li>
<li><a href="http://www.lib.nus.edu.sg/">library</a></li>
<li><a href="http://www.nus.edu.sg/campusmap/">maps</a></li>
<!--<li><a href="https://aces01.nus.edu.sg/CoE/jsp/coeMain.jsp">calendar</a></li>-->
<!--<li><a href="/sitemap">sitemap</a></li>-->
<!--<li><a href="#">a-z index</a></li>-->
<!--<li><a href="/contact">contact</a></li>-->
<li><a href="https://codecrunch.comp.nus.edu.sg/task_view.php?tid=4651#" id="rightcorner">&nbsp;</a></li>
</ul>
<br style="clear: left">
</div>
<div id="searchform">
<script src="./Snatch_files/nussearch.js" type="text/javascript"></script>
<form id="frmSearch" onsubmit="evalSearch();return false" action="https://codecrunch.comp.nus.edu.sg/task_view.php?tid=4651"><div>
<a href="http://www.nus.edu.sg/search/" style="text-decoration:none; font-size:11px; font-weight:bold; color:#666666">Search </a>
<input id="txtKeyword" type="text" value="search for..." onfocus="value=&#39;&#39;" class="equal" size="18">
in
<select id="SearchMenu" name="SearchMenu">
<option selected="selected" value="0">NUS Websites</option>
<option value="1">Internet</option>
<option value="2">Staff Directory</option>
<option value="3">Advanced Search</option>
</select>
<input class="equal" id="Go" src="./Snatch_files/go.png" type="image">
</div></form>
</div>
</div>

<!-- NUS Local-Navigation --><!--
<div id="nusmenu" class="nusbody"><div id="nusmenu_l"><div id="nusmenu_r">
<ul>
  <li><a href="http://www.comp.nus.edu.sg/index.html">Home</a></li>
  <li><a href="http://www.comp.nus.edu.sg/about.html">About Us</a></li>
  <li><a class="drop" href="javascript:;">Departments</a>
    <ul>
      <li><a href="http://www.comp.nus.edu.sg/cs" >Computer Science</a></li>
      <li><a href="http://www.comp.nus.edu.sg/is/" >Information Systems</a></li>
    </ul>
  </li>
  <li><a href="http://www.comp.nus.edu.sg/undergraduates" >Undergraduate</a></li>
  <li><a href="http://www.comp.nus.edu.sg/graduates" >Graduate</a></li>
  <li><a href="http://www.comp.nus.edu.sg/research" >Research</a></li>
  <li><a href="http://www.comp.nus.edu.sg/entrepreneurship" >Entrepreneurship</a></li>
  <li><a href="http://www.stmi.nus.edu.sg" >Executive Education</a></li>
  <li><a href="http://www.comp.nus.edu.sg/external_relations" >External Relations</a></li>
</ul>
</div></div></div>
-->

<!-- NUS Inner-Title -->
<div id="nustitle" class="nusbody"><div id="nustitle_l"><div id="nustitle_r">
              <h1 id="site-name">
                <a href="https://codecrunch.comp.nus.edu.sg/" title="Home" rel="home">CodeCrunch</a>
              </h1>
</div></div></div>

<!-- END NUS-Header -->

<div id="banner">
        <div id="topmenu">
        <div id="login">
                Logged in as: <strong>e0310357</strong>
                </div>
                <div style="display: block;"><ul>
                                        <li><a href="https://codecrunch.comp.nus.edu.sg/index.php">Home</a></li>
                                                    <li><a href="https://codecrunch.comp.nus.edu.sg/course_viewall.php">Courses</a></li>
                                                                <li><a href="https://codecrunch.comp.nus.edu.sg/tutorial_viewall.php">Tutorials</a></li>
                                                                <li><a href="https://codecrunch.comp.nus.edu.sg/task_viewall.php">Tasks</a></li>
                                                                <li><a href="https://codecrunch.comp.nus.edu.sg/tutorial_browser.php">Browse Tutorials</a></li>
                                                                <li><a href="https://codecrunch.comp.nus.edu.sg/user_viewsubmissions.php">My Submissions</a></li>
                                                                <li><a href="https://codecrunch.comp.nus.edu.sg/tools.php">Tools</a></li>
                                                <li><a href="https://codecrunch.comp.nus.edu.sg/logout_process.php">Logout</a></li>
                            </ul></div>
        </div>
</div>
<div id="container">
<div id="outer">
<div id="inner">
	<div id="content_full">                         
		<div class="content-header"><h3>CS2030 Practical Assessment #1</h3></div>
		<div class="spacer"></div>
		<table width="100%" cellpadding="0" cellspacing="0" border="0">
			<tbody><tr><td valign="top" style="width: 30%;">
				<div class="meta_header">Tags &amp; Categories</div>
				<div id="classifyList"><span class="value">Tags:
</span>
<span class="value">Categories:
</span></div>
			</td>
			<td valign="top" style="width: 40%;">
				<div class="meta_header">Related Tutorials</div>
				<div id="tutorialList"></div>
			</td>
			<td valign="top" style="width: 30%;">
			</td>
			</tr>
		</tbody></table>
		<div class="content-header">
			<h3>Task Content
							</h3>
		</div>                          
		<div class="panel"><div class="task-content">
		<h3>CS2030 Practical Assessment #1</h3>

<h4>Problem Description</h4>

<p><i>Snatch</i> is yet another transport service provider trying to vie for a place in the public transport arena.

</p><p><i>Snatch</i> provides three types of ride services:

</p><ul>
<li><tt>JustRide</tt>
	<ul>
    <li>Fare is based on the distance <tt>@ 22</tt> cents per km
    </li><li>Fare is the same regardless of the number of passengers (pax)
    </li><li>A surcharge of 500 cents if a ride request is issued between the peak hour of <tt>600</tt> hrs to <tt>900</tt> hrs, both inclusive
    </li></ul>
</li><li><tt>TakeACab</tt>
    <ul>
    <li>Fare is based on the distance <tt>@ 33</tt> cents per km, but there is a booking fee of 200 cents 
    </li><li>Fare is the same regardless of the number of passengers (pax)
    </li><li>No peak hour surcharge
    </li></ul>
</li><li><tt>ShareARide</tt>
    <ul>
    <li>Fare is based on the distance <tt>@ 50</tt> cents per km
    </li><li>Fare is divided equally among the number of passengers
    </li><li>Any fractional part of the fare is absorbed by your friendly driver
    </li><li>A surcharge of 500 cents if a ride request is issued between <tt>600</tt> hrs to <tt>900</tt> hrs, both inclusive
    </li></ul>
</li></ul>

<p>In addition, there are two types of drivers under <i>Snatch</i>.  Each can provide a subset of the services above.</p>

<ul>
<li><tt>NormalCab</tt> drivers provide <tt>JustRide</tt> and <tt>TakeACab</tt> services.
</li><li><tt>PrivateCar</tt> drivers provide <tt>JustRide</tt> and <tt>ShareARide</tt> services.
</li></ul>

<p>A customer can issue a <i>Snatch</i> ride request, specified by the distance of the ride, 
the number of passengers, 
and the time of the request.
Given a request, the system generates a list of possible bookings, by matching the available drivers based on the services they provide to the given request.</p>

<h4>Task</h4>

<p>Write a program to read in a request, and a list of available <tt>NormalCab</tt> or <tt>PrivateCar</tt> drivers together with their corresponding waiting times.
The program will then output the list of matches, in increasing order of fares, breaking ties by listing the match with smaller waiting time first.
The list of matches show the corresponding fares, waiting time, driver information, and service used.
</p><p>For simplicity, <b>assume that the waiting time for any two drivers are different.</b>

</p><p>A sample input for generating the list of matches is given below. 

</p><pre>20 3 1000
NormalCab SHA1234 5
PrivateCar SMA7890 10
</pre>

The first line is the request comprising three positive integer values denoting the distance <i>d</i> in km (1 ≤ d ≤ 1000), the number of passengers <i>n</i> (1 ≤ n ≤ 6) and the time of the request.  The time of the request is specified in <tt>hhmm</tt> format with no leading zeros.
Subsequent lines begin with the type of driver, the corresponding identifier (an alphanumeric licence plate with no spaces), and the waiting time <i>t</i> for that driver in minutes (0 ≤ t ≤ 60).<p></p>

<p>You can <b>assume that the input values and format are always valid</b>.</p>

<p>The output for the above is:

</p><pre>$3.33 using SMA7890 (10 mins away) PrivateCar (ShareARide)
$4.40 using SHA1234 (5 mins away) NormalCab (JustRide)
$4.40 using SMA7890 (10 mins away) PrivateCar (JustRide)
$8.60 using SHA1234 (5 mins away) NormalCab (TakeACab)
</pre>

<p>Each entry depicts the driver details and the service fare.
Note that the fare of the second and third entries are the same, but <tt>SHA1234</tt> is listed first since it has a shorter waiting time.</p>

<p><b>You can assume that no two entries have the same fare and the same waiting time.</b>

<!--
<p>For simplicity, you can assume that the waiting time for any two drivers are different.</p>
-->

</p><p>This task is divided into several levels.
Read through all the levels 
to see how the different levels are related.

</p><p>Just remember to:

</p><ul>
<li>write very class in a separate file with the same name as the class
</li><li>always compile your program files first before using <tt>jshell</tt> to test your program, or running your program with <tt>java</tt>
</li><li><tt>checkstyle</tt> and <tt>javadoc</tt> comments can be included after your programs have been up-loaded to CodeCrunch; you have till Friday midnight to do so.
</li></ul>

<p>
</p><table border="1" cellpadding="10" width="900">

<tbody><tr><td><h4>Level 1</h4>

<p>Define a <tt>Request</tt> class to handle a request comprising the distance, number of passengers, and time.


</p><pre>$ javac your_java_files
$ jshell -q your_java_files_in_bottom-up_dependency_order &lt; test1.jsh
jshell&gt; new Request(20, 3, 1000)
$.. ==&gt; 20km for 3pax @ 1000hrs
jshell&gt; new Request(10, 1, 900)
$.. ==&gt; 10km for 1pax @ 900hrs
jshell&gt; /exit
</pre>
</td></tr></tbody></table>

<!--
<p>Click <a href="https://codecrunch.comp.nus.edu.sg/task_view.php?tid=4187" target="_blank">here</a> 
to submit to CodeCrunch.
-->



<table border="1" cellpadding="10" width="900">

<tbody><tr><td><h4>Level 2</h4>

<p>Now include the <tt>JustRide</tt> and <tt>TakeACab</tt> services.  Note that the <tt>computeFare</tt> method returns the fare in cents.</p>

<pre>$ javac your_java_files
$ jshell -q your_java_files_in_bottom-up_dependency_order &lt; test2.jsh
jshell&gt; new JustRide()
$.. ==&gt; JustRide
jshell&gt; new JustRide().computeFare(new Request(20, 3, 1000))
$.. ==&gt; 440
jshell&gt; new JustRide().computeFare(new Request(10, 1, 900))
$.. ==&gt; 720
jshell&gt; new TakeACab()
$.. ==&gt; TakeACab
jshell&gt; new TakeACab().computeFare(new Request(20, 3, 1000))
$.. ==&gt; 860
jshell&gt; new TakeACab().computeFare(new Request(10, 1, 900))
$.. ==&gt; 530
jshell&gt; /exit
</pre>

<!--
<p>Click <a href="https://codecrunch.comp.nus.edu.sg/task_view.php?tid=4188" target="_blank">here</a> 
to submit to CodeCrunch.
-->

</td></tr></tbody></table>

<table border="1" cellpadding="10" width="900">

<tbody><tr><td><h4>Level 3</h4>

<p>Now, include a <tt>NormalCab</tt> driver who is identified by its license plate number (a string) and the passenger waiting time in minutes.</p>

<p>Then, add a <tt>Booking</tt> class that takes in a driver, a service, and a request.  Two bookings can be compared to depending on the corresponding computed fare, breaking ties by the waiting time.</p>

<pre>$ javac your_java_files
$ jshell -q your_java_files_in_bottom-up_dependency_order &lt; test3.jsh
jshell&gt; new NormalCab("SHA1234", 5)
$.. ==&gt; SHA1234 (5 mins away) NormalCab
jshell&gt; new Booking(new NormalCab("SHA1234", 5), new JustRide(), new Request(20, 3, 1000))
$.. ==&gt; $4.40 using SHA1234 (5 mins away) NormalCab (JustRide)
jshell&gt; new Booking(new NormalCab("SHA1234", 5), new TakeACab(), new Request(20, 3, 1000))
$.. ==&gt; $8.60 using SHA1234 (5 mins away) NormalCab (TakeACab)
jshell&gt; new NormalCab("SHA2345", 10)
$.. ==&gt; SHA2345 (10 mins away) NormalCab
jshell&gt; new Booking(new NormalCab("SHA2345", 10), new JustRide(), new Request(10, 1, 900))
$.. ==&gt; $7.20 using SHA2345 (10 mins away) NormalCab (JustRide)
jshell&gt; new Booking(new NormalCab("SHA2345", 10), new TakeACab(), new Request(10, 1, 900))
$.. ==&gt; $5.30 using SHA2345 (10 mins away) NormalCab (TakeACab)
jshell&gt; Comparable&lt;Booking&gt; b1 = new Booking(new NormalCab("SHA2345", 10), new JustRide(), new Request(10, 1, 900))
jshell&gt; Booking b2 = new Booking(new NormalCab("SHA2345", 10), new TakeACab(), new Request(10, 1, 900))
jshell&gt; b1.compareTo(b2) &gt; 0
$.. ==&gt; true
jshell&gt; Comparable&lt;Booking&gt; b3 = new Booking(new NormalCab("SHA1234", 5), new JustRide(), new Request(10, 1, 900))
jshell&gt; Booking b4 = new Booking(new NormalCab("SHA2345", 10), new JustRide(), new Request(10, 1, 900))
jshell&gt; b3.compareTo(b4) &lt; 0
$.. ==&gt; true
jshell&gt; /exit
</pre>

<!--
<p>Click <a href="https://codecrunch.comp.nus.edu.sg/task_view.php?tid=4189" target="_blank">here</a> 
to submit to CodeCrunch.
-->

</td></tr></tbody></table>

<table border="1" cellpadding="10" width="900">

<tbody><tr><td><h4>Level 4</h4>

<p>Now include the <tt>ShareARide</tt> service and <tt>PrivateCar</tt> driver.

</p><p>You should aim to make the <tt>Booking</tt> class general such that it does not need to check any invalid pairing, say between <tt>PrivateCar</tt> driver and <tt>TakeACab</tt> service.
If you have designed your program appropriately, then extending your program with additional drivers and services would not require any modification to existing classes.

<!--
Note that you can make the <tt>Booking</tt> class general and therefore need not check for the invalid pairing between 
<tt>PrivateCar</tt> driver and <tt>TakeACab</tt> service
, as well as between <tt>NormalCab</tt> driver and <tt>ShareARide</tt> service.  You can leave the logic of ensuring valid pairing to Level 5.   
-->

<!--
<p>The following is a sample run of the program.  User input is <u>underlined</u>.  
 Ensure that the last line of output is followed by a newline character. -->

</p><pre>$ javac your_java_files
$ jshell -q your_java_files_in_bottom-up_dependency_order &lt; test4.jsh
jshell&gt; new ShareARide()
$.. ==&gt; ShareARide
jshell&gt; new PrivateCar("SMA7890", 5)
$.. ==&gt; SMA7890 (5 mins away) PrivateCar
jshell&gt; new Booking(new PrivateCar("SMA7890", 5), new JustRide(), new Request(20, 3, 1000))
$.. ==&gt; $4.40 using SMA7890 (5 mins away) PrivateCar (JustRide)
jshell&gt; new Booking(new PrivateCar("SMA7890", 5), new ShareARide(), new Request(20, 3, 1000))
$.. ==&gt; $3.33 using SMA7890 (5 mins away) PrivateCar (ShareARide)
jshell&gt; new PrivateCar("SLA5678", 10)
$.. ==&gt; SLA5678 (10 mins away) PrivateCar
jshell&gt; new Booking(new PrivateCar("SLA5678", 10), new JustRide(), new Request(10, 1, 900))
$.. ==&gt; $7.20 using SLA5678 (10 mins away) PrivateCar (JustRide)
jshell&gt; new Booking(new PrivateCar("SLA5678", 10), new ShareARide(), new Request(10, 1, 900))
$.. ==&gt; $10.00 using SLA5678 (10 mins away) PrivateCar (ShareARide)
jshell&gt; Comparable&lt;Booking&gt; b1 = new Booking(new PrivateCar("SLA5678", 10), new JustRide(), new Request(10, 1, 900))
jshell&gt; Booking b2 = new Booking(new PrivateCar("SLA5678", 10), new ShareARide(), new Request(10, 1, 900))
jshell&gt; b1.compareTo(b2) &lt; 0
$.. ==&gt; true
jshell&gt; Comparable&lt;Booking&gt; b3 = new Booking(new PrivateCar("SMA7890", 5), new JustRide(), new Request(10, 1, 900))
jshell&gt; Booking b4 = new Booking(new PrivateCar("SLA5678", 10), new JustRide(), new Request(10, 1, 900))
jshell&gt; b3.compareTo(b4) &lt; 0
$.. ==&gt; true
jshell&gt; /exit
</pre>

In practice, we should make the <tt>Booking</tt> constructor private to prevent a caller from passing in an invalid pair of driver and service, but that would make it harder for us to test your code for the purpose of the assessment.


</td></tr></tbody></table>

<table border="1" cellpadding="10" width="900">

<tbody><tr><td><h4>Level 5</h4>

<p>Now complete the program by reading the input, and then output the list of matches sorted by increasing fare (breaking ties by waiting time).  

</p><p><b>Assume that no two matches have the same fare and the same waiting time.</b>

</p><p>The following are sample runs of the program.  User input is <u>underlined</u>.  
<!-- Ensure that the last line of output is followed by a newline character. -->

</p><p></p><table border="1">

<tbody><tr><td><tt>
<u>20 3 1000</u><br>
<u>NormalCab SHA1234 5</u><br>
<u>PrivateCar SMA7890 10</u><br>
<u>^D</u><br>
$3.33 using SMA7890 (10 mins away) PrivateCar (ShareARide)<br>
$4.40 using SHA1234 (5 mins away) NormalCab (JustRide)<br>
$4.40 using SMA7890 (10 mins away) PrivateCar (JustRide)<br>
$8.60 using SHA1234 (5 mins away) NormalCab (TakeACab)<br>
</tt>

</td></tr><tr><td><tt>
<u>10 1 0900</u><br>
<u>NormalCab SHA1234 5</u><br>
<u>PrivateCar SMA7890 10</u><br>
<u>^D</u><br>
$5.30 using SHA1234 (5 mins away) NormalCab (TakeACab)<br>
$7.20 using SHA1234 (5 mins away) NormalCab (JustRide)<br>
$7.20 using SMA7890 (10 mins away) PrivateCar (JustRide)<br>
$10.00 using SMA7890 (10 mins away) PrivateCar (ShareARide)<br>
</tt>

</td></tr></tbody></table>

<!--
<p>Click <a href="https://codecrunch.comp.nus.edu.sg/task_view.php?tid=4191" target="_blank">here</a> 
to submit to CodeCrunch.
-->

<p>Check the format correctness of the output by typing the following Unix command
</p><pre>$ javac Main.java
$ java Main &lt; test5.in | diff - test5.out
</pre>

</td></tr></tbody></table>

<!--
<table border=1 cellpadding=10 width=900>

<tr><td><h4>Level 6 (Surprise!)</h4>

</table>
-->
		</div></div>                          
					<div class="content-header">
					<h3>Submission (Practice)</h3>
			</div>
			<div id="practiceNotification"></div>
			<div class="panel">
				<span class="label" style="vertical-align:top">Your Files:</span>
				<span class="value-long">
					<div id="plupload_container" style="position: relative;">
						<a id="task_submission" href="javascript:;" class="submitButton" style="position: relative; z-index: 1;">BROWSE</a>
					<div id="html5_1e5cfbk201v3ur9m155d6bdfvh4_container" class="moxie-shim moxie-shim-html5" style="position: absolute; top: -7px; left: 0px; width: 103px; height: 28px; overflow: hidden; z-index: 0;"><input id="html5_1e5cfbk201v3ur9m155d6bdfvh4" type="file" style="font-size: 999px; opacity: 0; position: absolute; top: 0px; left: 0px; width: 100%; height: 100%;" multiple="" accept=".java,.c,.cpp,.h,.py,.jar" tabindex="-1"></div></div>
					<br>
					<div id="filelist"></div>
					<script type="text/javascript">
						var uploader;
						$(document).ready(function() {		
							uploader = new plupload.Uploader({
								runtimes: 'html5,flash,html4',
								browse_button: 'task_submission',
								container: 'plupload_container',
								prevent_duplicates: true,
								url: 'plupload/uploadFiles.php',

								filters: {
									max_file_size: '31457280', 
									mime_types: [
										{title : "Allowed files", extensions : "java,c,cpp,h,py,jar"}	
									]
								},

								init: {
									PostInit: function () {
										document.getElementById('filelist').innerHTML = '';
									},

									FilesAdded: function (up, files) {
										plupload.each(files, function(file) {
											document.getElementById('filelist').innerHTML += 
												'<li class="plupload_file ui-state-default plupload_delete" id="' + file.id + '" class="plupload_file_name">' +  
													'<div class="plupload_file_status">' +
														'<div class="plupload_file_action">' + 
															'<div class="plupload_action_icon ui-icon ui-icon-circle-close" onclick="uploader.removeFile(uploader.getFile(\''+file.id+'\'));"> </div>' + 
														'</div>' +
														'<div class="plupload_file_name" title="' + file.name + '">' + 
															'<span class="plupload_file_name_wrapper">' + file.name + '   (<i>' + plupload.formatSize(file.size) + '</i>) <b></b>' + '</span>' +
														'</div>' +
													'</div>' +
												'</li>';
										});
										document.getElementById('filelist').innerHTML = '<ul class="plupload_filelist_content" id="uploader_filelist" unselectable="on">' + document.getElementById('filelist').innerHTML + '</ul>';

									},

									FilesRemoved: function(up, files) {
										plupload.each(files, function(file) {
											$('#' + file.id).remove();
										});
									},

									FileUploaded: function(up, file, info) {
										$('#' + file.id).remove();
									},

									UploadProgress: function(up, file) {
										$('#' + file.id + ' b')[0].innerHTML = '<span>' + file.percent + "%</span>";
									},

									UploadComplete: function(up, files) {
										doTaskGrade();
									},

									Error: function(up, err) {
										alert("\nError #" + err.code + ": " + err.message);
									}
								}
							});
							uploader.init();


						});

					</script><br>
					<p><a href="javascript:uploader.setOption(&#39;multipart_params&#39;, { &#39;sess_id&#39;: &#39;mb00urn4ahqfj2erlg9plkqhp872sjig&#39;, &#39;type&#39;: &#39;task_submission&#39;, &#39;tid&#39;: &#39;4651&#39;, &#39;username&#39;: &#39;e0310357&#39;, &#39;uid&#39;: &#39;17287&#39; }); javascript:uploader.start();" class="submitButton">SUBMIT</a>
					(only .java, .c,  .cpp, .h, and .py extensions allowed)</p>
				</span>
				<br>
				<span class="label">&nbsp;</span>
				<span class="value-long" style="font-size: 90%; color: #777;">To submit multiple files, click on the Browse button, then select one or more
				files. The selected file(s) will be added to the upload queue. You can repeat this step to add more files. Check that you have all the files
				needed for your submission. Then click on the Submit button to upload your submission.</span>
			</div>
        							<input type="hidden" id="tid" name="tid" value="4651">
		</div>
		<!-- end content -->
</div>
<!-- end inner -->
<div id="loading-mask">
        <p id="loading_mask_loader" class="loader" style="display: none;"> <img alt="Loading..." src="./Snatch_files/ajax-loader-tr.gif"> <br>
                Please wait... </p>
</div>
<script type="text/javascript">
$(".star").rating({
        focus: function(value, link) {
                var tip = $("#rating_text");
                tip[0].data = tip[0].data || tip.html(); 
                tip.html(link.title || "value: " + value);
        },
        blur: function(value, link) {
                var tip = $("#rating_text");
                $("#rating_text").html(tip[0].data || "");
        },
        callback: function(value, link) {
                $.ajax({
                        type: "POST",
                        url: "task_updaterating.php",
                        data: ({tid:$("#tid").val(), rating:value}),
                        success: function(html) {
                                var msg = html.split(";");
                                $("#rating_text").removeClass().addClass(msg[0]);
                                $("#rating_text").html(msg[1]);
                        }
                });
        }
});

function getComments() {
        $.ajax({
                type: "POST",
                url: "task_getcomments.php",
                data: ({tid:$("#tid").val()}),
                success: function(html) {
                        $("#commentList").html(html);
                }
        });
}

function doTaskGrade(e, d) {
        $.ajax({
                type: "POST",
                url: "doTaskGrade.php",
                data: ({tid:$("#tid").val()}),
                success: function(html) {
                        var msg = html.split(";");
                        $("#practiceNotification").removeClass().addClass(msg[0]);
                        $("#practiceNotification").html(msg[1]);
                }
        });

}

function doCourseTaskGrade(e, d) {
        $.ajax({
                type: "POST",
                url: "doTaskGrade.php",
                data: ({tid:$("#tid").val(), course_id:$("#course_id").val(), do_course:1}),
                success: function(html) {
                        var msg = html.split(";");
                        $("#courseNotification").removeClass().addClass(msg[0]);
                        $("#courseNotification").html(msg[1]);
                }
        });

}

function addComment() {
        $.ajax({
                type: "POST",
                url: "task_addcomment.php",
                data: ({tid:$("#tid").val(), comment:encodeURIComponent($("#comment").val())}),
                success: function(html) {
                        var msg = html.split(";");
                        $("#commentNotification").removeClass().addClass(msg[0]);
                        $("#commentNotification").html(msg[1]);
                        
                        getComments();
                }
        });
}

function deleteComment(c) {
        $.ajax({
                type: "POST",
                url: "task_deletecomment.php",
                data: ({comment_id:c}),
                success: function(html) {
                        var msg = html.split(";");
                        $("#commentNotification").removeClass().addClass(msg[0]);
                        $("#commentNotification").html(msg[1]);
                        
                        getComments();
                }
        });
}

function getClassify(){
                $.ajax({
                type: "GET",
                url: "task_classify.php",
                data: ({tid:$("#tid").val()}),
                success: function(html) {
                        $("#classifyList").html(html);
                }
        });
}

function getTutorial(){
        $.ajax({
                type: "POST",
                url: "task_gettutorials.php",
                data: ({tid:$("#tid").val()}),
                success: function(html) {
                        $("#tutorialList").html(html);
                }
        });
}

function getQueries() {
        $.ajax({
                type: "POST",
                url: "task_getqueries.php",
                data: ({tid:$("#tid").val()}),
                success: function(html) {
                        $("#queryList").html(html);
                }
        });
}

function addQuery() {
        $.ajax({
                type: "POST",
                url: "task_addquery.php",
                data: ({tid:$("#tid").val(), contest_id:$("#contest_id").val(), query:encodeURIComponent($("#query").val())}),
                success: function(html) {
                        var msg = html.split(";");
                        $("#queryNotification").removeClass().addClass(msg[0]);
                        $("#queryNotification").html(msg[1]);
                        
                        getQueries();
                }
        });
}

function deleteQuery(q) {
        $.ajax({
                type: "POST",
                url: "task_deletequery.php",
                data: ({query_id:q}),
                success: function(html) {
                        var msg = html.split(";");
                        $("#queryNotification").removeClass().addClass(msg[0]);
                        $("#queryNotification").html(msg[1]);
                        
                        getQueries();
                }
        });
}

function addTag() {
        $.ajax({
                type: "POST",
                url: "tag_add.php",
                data: ({tid:$("#tid").val(), tags:$("#tagwords").val()}),
                success: function(html) {
                        var msg = html.split(";");
                        $("#tagNotification").removeClass().addClass(msg[0]);
                        $("#tagNotification").html(msg[1]);
                        
                        getClassify();
                }
        });
}


$(document).ready(function() {
        getComments();
        getQueries();
        getClassify();
        getTutorial();
        //getCloud();
});

$(document).everyTime(60000, function(i) {
        if ($("#tid").val() != "" && $("#tid").val() != null) {
                $.ajax({
                        type: "POST",
                        url: "task_checkcontest.php",
                        data: ({tid:$("#tid").val()}),
                        success: function(html) {
                                if (html == "0") {
                                        $("#contest_submit").html("");
                                }
                        }
                });
                $.ajax({
                        type: "POST",
                        url: "task_checkcourse.php",
                        data: ({tid:$("#tid").val()}),
                        success: function(html) {
                                if (html == "0") {
                                        $("#course_submit").html("");
                                }
                        }
                });
        }
}, 0);

$('#loading_mask_loader')
        .hide()  // hide it initially
        .ajaxStart(function() {
                $(this).show();
        })
        .ajaxStop(function() {
                $(this).hide();
        });
        
</script>


</div> <!-- end outer -->

</div> <!-- end container -->

<!-- START NUS-Footer --> 
<div id="nusfooter" class="nusbody">
<div id="nusfooter_ml"><div id="nusfooter_mr">
<div id="nusfooter_tc"><div id="nusfooter_tl"><div id="nusfooter_tr">
<div id="nusfooter_bc"><div id="nusfooter_bl"><div id="nusfooter_br">
<div class="inner"><div class="left"><p>© Copyright 2009-2020 National University of Singapore. All Rights Reserved.</p>  
<p class="nusfooterlinks">
<a href="http://www.nus.edu.sg/terms.php">Terms of Use</a> |
<a href="http://www.nus.edu.sg/policy.php">Privacy</a> |
<a href="http://www.nus.edu.sg/nondiscrim.php">Non-discrimination</a></p> 
</div>    
<div class="right">
<a href="https://mysoc.nus.edu.sg/">MySoC</a> |
<a href="https://docs.comp.nus.edu.sg/cf/">Computing Facilities</a> |
<a href="http://www.nus.edu.sg/search/">Search</a> |
<a href="http://www.nus.edu.sg/campusmap/">Campus Map</a>
<p>School of Computing, National University of Singapore</p>
</div>    
<div style="clear: both;"> </div>
</div>
</div></div></div>
</div></div></div>
</div></div>
</div>
<!-- END NUS-Footer -->

</body></html>